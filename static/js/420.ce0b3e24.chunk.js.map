{"version":3,"file":"static/js/420.ce0b3e24.chunk.js","mappings":"0NAyCA,EArCmB,SAAC,GAAiB,IAAfA,EAAc,EAAdA,QACpB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAiBA,OACE,gBAAKC,UAAU,YAAf,UACE,kBAAMC,SAba,SAAAC,GACrBA,EAAEC,iBAEF,IAAMC,EAAcF,EAAEG,OAAOC,SAASC,OAAOT,MAAMU,OAGnDZ,EAFqC,KAAhBQ,EAAqBA,EAAc,IAIxDL,EAAS,GACV,EAImCC,UAAU,cAA1C,WACE,4BACE,kBACES,KAAK,OACLX,MAAOA,EACPY,KAAK,SACLC,YAAY,YACZC,SAxBY,SAAAV,GACpBH,EAASG,EAAEG,OAAOP,MACnB,EAuBSE,UAAU,0BAGd,mBAAQS,KAAK,SAAST,UAAU,sBAAhC,wBAIP,E,SCMD,EA1CmB,SAAC,GAAmB,IAC7Ba,EAD4B,EAAhBC,UACZD,QACFE,GAAWC,EAAAA,EAAAA,MAEjB,OACE,gBAAKhB,UAAU,YAAf,UACE,eAAIA,UAAU,qBAAd,SACGa,EAAQI,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,eAAgBC,EAAvB,EAAuBA,YAAaC,EAApC,EAAoCA,aAAcC,EAAlD,EAAkDA,aAAlD,OACX,eAAatB,UAAU,2BAAvB,UACE,UAAC,KAAD,CAAMuB,GAAE,UAAKL,GAAMM,MAAO,CAAEC,KAAMV,GAAlC,WAA8C,iBAAKf,UAAU,iBAAf,UAC3CoB,GACE,gBACDpB,UAAU,2CACV0B,IAAG,yCAAoCN,GACvCO,IAAKR,EACLS,MAAO,IACPC,OAAQ,OAEP,gBACD7B,UAAU,2CACV0B,IAAI,oBACJC,IAAKR,EACLS,MAAO,IACPC,OAAQ,OAIV,cAAG7B,UAAU,sBAAb,SAAqCqB,EAAcS,QAAQ,SAG3D,iBAAK9B,UAAU,sBAAf,WACE,cAAGA,UAAU,oBAAb,SAAkCmB,KAElC,eAAGnB,UAAU,mBAAb,cAAkC+B,OAAOC,SAASV,GAAlD,cAzBGJ,EADE,OAiCpB,E,SCpCKe,EACE,OADFA,EAEK,UAFLA,EAGM,WA6CZ,EAzCe,WAAO,IAAD,EACnB,GAA4BpC,EAAAA,EAAAA,UAASoC,GAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA4BtC,EAAAA,EAAAA,UAAS,IAArC,eAAOuC,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAW,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,GAwBjD,OAdAC,EAAAA,EAAAA,YAAU,WACRR,EAAUF,GACVW,MAAM,6GAAD,OACiGH,EADjG,gCAEFI,MAAK,SAAAC,GAAC,OAAIA,EAAEC,MAAN,IACNF,MAAK,SAAAT,GACJC,EAAUD,GACVD,EAAUF,EACX,IACAe,OAAM,SAAAC,GACLd,EAAU,SACX,GACJ,GAAE,CAACM,KAGF,iCACE,SAAC,EAAD,CAAY7C,QAxBU,SAAAsD,GACxB,GAAa,KAATA,EACF,OAAOV,EAAgB,CAAC,GAE1BA,EAAgB,CAAEW,MAAOD,GAE1B,IAoBIhB,IAAWD,IAAkB,wCAE7BC,IAAWD,GAA6C,IAA1BG,EAAOvB,QAAQuC,SAAgB,SAACC,EAAA,EAAD,mGAE7DnB,IAAWD,GAAmBG,EAAOvB,QAAQuC,OAAS,IAAK,SAAC,EAAD,CAAYtC,UAAWsB,MAGxF,C","sources":["components/SearchForm/SearchForm.jsx","components/SearchList/Searchlist.jsx","pages/Movies.jsx"],"sourcesContent":["import { useState } from \"react\";\nimport PropTypes from 'prop-types';\nimport './SearchForm.css'\n\nconst SearchForm = ({ onClick }) => {\n  const [value, setValue] = useState('');\n  \n  const onInputChange = e => {\n    setValue(e.target.value);\n  };\n  \n  const onSearchSubmit = e => {\n    e.preventDefault();\n    \n    const searchValue = e.target.elements.search.value.trim()\n    const searchParams = searchValue !== '' ? searchValue : [];\n    \n    onClick(searchParams);\n    \n    setValue('');\n  };\n  \n  return (\n    <div className=\"Container\">\n      <form onSubmit={onSearchSubmit} className='Search-form'>\n        <label>\n          <input\n            type=\"text\"\n            value={value}\n            name=\"search\"\n            placeholder=\"Search...\"\n            onChange={onInputChange}\n            className='Search-form__input' />\n        </label>\n      \n        <button type=\"submit\" className=\"Search-form__button\">Search</button>\n      </form>\n    </div>\n  );\n};\n\nexport default SearchForm;\n\nSearchForm.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n","import { Link, useLocation } from \"react-router-dom\";\nimport './SearchList.css'\n\nconst SearchList = ({ serchData }) => {\n  const { results } = serchData;\n  const location = useLocation();\n  \n  return (\n    <div className=\"Container\">\n      <ul className=\"Search-movies-list\">\n        {results.map(({ id, original_title, poster_path, vote_average, release_date }) => (\n          <li key={id} className=\"Search-movies-list__item\">\n            <Link to={`${id}`} state={{ from: location }}><div className=\"Banner-wrapper\">\n              {poster_path ?\n                (<img\n                className=\"Movies-list__img Search-movies-list__img\"\n                src={`https://image.tmdb.org/t/p/w300${poster_path}`}\n                alt={original_title}\n                width={223}\n                height={335}\n                />) :\n                (<img\n                className=\"Movies-list__img Search-movies-list__img\"\n                src=\"images/nf-cat.jpg\"\n                alt={original_title}\n                width={223}\n                height={335}\n                />)\n              }\n                  \n              <p className=\"Movies-list__rating\">{(vote_average).toFixed(1)\n              }</p>\n            </div>\n              <div className=\"Descriprion-wrapper\">\n                <p className=\"Descriprion-title\">{original_title}</p>\n                  \n                <p className=\"Descriprion-date\">({Number.parseInt(release_date)})</p></div>\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default SearchList;","import { useEffect, useState } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\nimport SearchForm from \"components/SearchForm/SearchForm\";\nimport SearchList from \"components/SearchList/Searchlist\";\nimport NotFound from \"components/NotFound/NotFound\";\n\n\nconst STATUS = {\n  IDLE: 'idle',\n  LOADING: 'loading',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n\nconst Movies = () => {\n  const [status, setStatus] = useState(STATUS.IDLE);\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const seacrhMovie = searchParams.get('quary') ?? \"\";\n  \n  const onChangeURLbyForm = data => {\n    if (data === '') {\n      return setSearchParams({});\n    }\n    setSearchParams({ quary: data });\n    \n  };\n  \n  useEffect(() => {\n    setStatus(STATUS.LOADING);\n    fetch(`\nhttps://api.themoviedb.org/3/search/movie?api_key=17cad80f9662381de06e4551c499d7de&language=en-US&query=${seacrhMovie}&page=1&include_adult=false`)\n      .then(r => r.json())\n      .then(movies => {\n        setMovies(movies);\n        setStatus(STATUS.RESOLVED);\n      })\n      .catch(error => {\n        setStatus('reject');\n      });\n  }, [seacrhMovie]);\n  \n  return (\n    <>\n      <SearchForm onClick={onChangeURLbyForm} />\n      \n      {status === STATUS.LOADING && <div>LOADING...</div>}\n      \n      {status === STATUS.RESOLVED && movies.results.length === 0 && <NotFound>There is nothing here or this material was not found, change your search parameters!</NotFound>}\n      \n      {status === STATUS.RESOLVED && movies.results.length > 0 && <SearchList serchData={movies} />}\n    </>\n  );\n};\n\nexport default Movies;"],"names":["onClick","useState","value","setValue","className","onSubmit","e","preventDefault","searchValue","target","elements","search","trim","type","name","placeholder","onChange","results","serchData","location","useLocation","map","id","original_title","poster_path","vote_average","release_date","to","state","from","src","alt","width","height","toFixed","Number","parseInt","STATUS","status","setStatus","movies","setMovies","useSearchParams","searchParams","setSearchParams","seacrhMovie","get","useEffect","fetch","then","r","json","catch","error","data","quary","length","NotFound"],"sourceRoot":""}