{"version":3,"file":"static/js/59.efe98a04.chunk.js","mappings":"+MAqBA,EAlB8B,WAC5B,OACE,iBAAKA,UAAU,2BAAf,WACE,eAAIA,UAAU,aAAd,qCAEA,gBAAIA,UAAU,YAAd,WACE,eAAIA,UAAU,kBAAd,UACE,SAAC,KAAD,CAAMC,GAAG,OAAT,qBAGF,eAAID,UAAU,kBAAd,UACE,SAAC,KAAD,CAAMC,GAAG,UAAT,4BAEJ,SAAC,KAAD,MAGL,E,kBCdKC,EACE,OADFA,EAEK,UAFLA,EAGM,WAqFZ,EAjFkB,SAAC,GAAiB,IAAD,IAAdC,EAAc,EAAdA,QACnB,GAA4BC,EAAAA,EAAAA,UAASF,GAArC,eAAOG,EAAP,KAAeC,EAAf,KACA,GAA0BF,EAAAA,EAAAA,UAAS,CAAC,GAApC,eAAOG,EAAP,KAAcC,EAAd,KACQC,EAAyHF,EAAzHE,eAAgBC,EAAyGH,EAAzGG,YAAaC,EAA4FJ,EAA5FI,aAAcC,EAA8EL,EAA9EK,WAAYC,EAAkEN,EAAlEM,aAAcC,EAAoDP,EAApDO,qBAAsBC,EAA8BR,EAA9BQ,OAAQC,EAAsBT,EAAtBS,QAASC,EAAaV,EAAbU,SAC9GC,GAAWC,EAAAA,EAAAA,MACXC,GAAeC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,KAcpD,OAZAC,EAAAA,EAAAA,YAAU,WACRlB,EAAUJ,GACVuB,MAAM,sCAAD,OAAuCtB,EAAvC,6DAA0GuB,MAAK,SAAAC,GAAC,OAAIA,EAAEC,MAAN,IAClHF,MAAK,SAAAnB,GACJC,EAASD,GACTD,EAAUJ,EACX,IACA2B,OAAM,SAAAC,GACLxB,EAAU,SACX,GACJ,GAAE,CAACH,IAEAE,IAAWH,GAEX,wCAIAG,IAAWH,GAEX,gBAAKF,UAAU,4BAAf,UACE,iBAAKA,UAAU,gBAAf,WACE,SAAC,KAAD,CAAMC,GAAImB,EAAaW,QAAS/B,UAAU,WAA1C,UACE,iBAAMA,UAAU,WAAhB,wBAGF,eAAIA,UAAU,cAAd,SAA6BS,EAAeuB,iBAE5C,iBAAKhC,UAAU,eAAf,WACE,iBAAKA,UAAU,iBAAf,WACE,gBACEA,UAAU,eACViC,IAAG,yCAAoCvB,GACvCwB,IAAKzB,KAGP,eAAGT,UAAU,eAAb,qBAAqCW,EAArC,MAAoD,4BAAOC,EAAP,WAApD,WAGF,iBAAKZ,UAAU,mBAAf,WACE,eAAGA,UAAU,aAAb,+BAA2C,iBAAMA,UAAU,aAAhB,SAA8BmC,OAAOC,SAASvB,SAEzF,iBAAKb,UAAU,0BAAf,WACE,cAAGA,UAAU,kBAAb,6BACA,wBACGc,EAAqBuB,KAAI,gBAAGC,EAAH,EAAGA,WAAYC,EAAf,EAAeA,KAAf,OACxB,yBACE,iBAAMvC,UAAU,aAAhB,SAA8BuC,KADvBD,EADe,UAO9B,iBAAKtC,UAAU,uBAAf,WACE,cAAGA,UAAU,eAAb,0BACA,wBACGe,EAAOsB,KAAI,gBAAGG,EAAH,EAAGA,GAAID,EAAP,EAAOA,KAAP,OACV,yBACE,iBAAMvC,UAAU,aAAhB,SAA8BuC,EAAKE,iBAD5BD,EADC,UAOhB,eAAGxC,UAAU,gBAAb,uBAAsC,kBAAMA,UAAU,aAAhB,UAA8BgB,EAA9B,cAEtC,cAAGhB,UAAU,iBAAb,wBACA,cAAGA,UAAU,aAAb,SAA2BiB,oBA/CvC,CAsDD,EC3ED,EAZqB,WACnB,IAAQd,GAAYuC,EAAAA,EAAAA,MAAZvC,QAER,OACE,iCACE,SAAC,EAAD,CAAWA,QAASA,KAEpB,SAAC,EAAD,MAGL,C","sources":["components/AdditionalInformation/AdditionalInformation.jsx","components/MovieItem/MovieItem.jsx","pages/MovieDetails.jsx"],"sourcesContent":["import { Link, Outlet } from \"react-router-dom\";\nimport './AdditionalInformation.css'\n\nconst AdditionalInformation = () => {\n  return (\n    <div className=\"Container Info-container\">    \n      <h2 className=\"Info-title\">Additional information</h2>\n      \n      <ul className=\"Info-list\">\n        <li className=\"Info-list__item\">\n          <Link to='cast'>Cast</Link>\n        </li>\n        \n        <li className=\"Info-list__item\">\n          <Link to='reviews'>Reviews </Link></li>\n      </ul>\n      <Outlet />      \n    </div>\n  );\n};\n\nexport default AdditionalInformation;","import { useEffect, useRef, useState } from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\nimport './MovieItem.css'\n\nconst STATUS = {\n  IDLE: 'idle',\n  LOADING: 'loading',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n\nconst MovieItem = ({ movieId }) => {\n  const [status, setStatus] = useState(STATUS.IDLE);\n  const [movie, setMovie] = useState({});\n  const { original_title, poster_path, vote_average, vote_count, release_date, production_countries, genres, runtime, overview } = movie;\n  const location = useLocation(); \n  const linkBackPage = useRef(location.state?.from ?? '/')\n  \n  useEffect(() => {\n    setStatus(STATUS.LOADING);\n    fetch(`https://api.themoviedb.org/3/movie/${movieId}?api_key=17cad80f9662381de06e4551c499d7de&language=en-US`).then(r => r.json())\n      .then(movie => {\n        setMovie(movie);\n        setStatus(STATUS.RESOLVED);\n      })\n      .catch(error => {\n        setStatus('reject');\n      });\n  }, [movieId]);\n  \n  if (status === STATUS.LOADING) { \n    return (\n      <div>LOADING...</div>\n    );\n  };\n  \n  if (status === STATUS.RESOLVED) {\n    return (\n      <div className=\"Container Movie-container\">\n        <div className=\"Movie-wrapper\">\n          <Link to={linkBackPage.current} className='Back-btn'>\n            <span className=\"Btn-span\">go back</span>\n          </Link>\n                \n          <h2 className=\"Movie-title\">{original_title.toUpperCase()}</h2>\n        \n          <div className=\"Card-wrapper\">\n            <div className=\"Poster-wrapper\">\n              <img\n                className=\"Movie-poster\"\n                src={`https://image.tmdb.org/t/p/w300${poster_path}`}\n                alt={original_title}\n              />\n           \n              <p className=\"Movie-rating\">Rating: {vote_average} (<span>{vote_count} vote</span>)</p>\n            </div>\n      \n            <div className=\"Movie-descr-list\">\n              <p className=\"Movie-date\">Date of release: <span className=\"Movie-span\">{Number.parseInt(release_date)}</span></p>\n            \n              <div className=\"Movie-countries-wrapper\">\n                <p className=\"Movie-countries\">Countries:&nbsp;</p>\n                <ul>\n                  {production_countries.map(({ iso_3166_1, name }) => (\n                    <li key={iso_3166_1}>\n                      <span className=\"Movie-span\">{name}</span>\n                    </li>))}\n                </ul>\n              </div>\n             \n              <div className=\"Movie-genres-wrapper\">\n                <p className=\"Movie-genres\">Genres:&nbsp;</p>\n                <ul>\n                  {genres.map(({ id, name }) => (\n                    <li key={id}>\n                      <span className=\"Movie-span\">{name.toLowerCase()}</span>\n                    </li>))}\n                </ul>\n              </div>\n            \n              <p className=\"Movie-runtime\">Runtime: <span className=\"Movie-span\">{runtime} min</span></p>\n        \n              <p className=\"Movie-overview\">Overview:</p>\n              <p className=\"Movie-span\">{overview}</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  };  \n};\n\nexport default MovieItem;\n\nMovieItem.propTypes = {\n    movieId: PropTypes.string.isRequired,\n};\n","import AdditionalInformation from \"components/AdditionalInformation/AdditionalInformation\";\nimport { useParams } from \"react-router-dom\";\nimport MovieItem from '../components/MovieItem/MovieItem';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  \n  return (\n    <>\n      <MovieItem movieId={movieId} />\n     \n      <AdditionalInformation />\n    </>\n  );\n};\n\nexport default MovieDetails;"],"names":["className","to","STATUS","movieId","useState","status","setStatus","movie","setMovie","original_title","poster_path","vote_average","vote_count","release_date","production_countries","genres","runtime","overview","location","useLocation","linkBackPage","useRef","state","from","useEffect","fetch","then","r","json","catch","error","current","toUpperCase","src","alt","Number","parseInt","map","iso_3166_1","name","id","toLowerCase","useParams"],"sourceRoot":""}